/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package interfaz;

import java.io.File;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import listas.musicales.Cancion;

/**
 * Permite crear o modificar canciones a traves de un JDialog.
 *
 * @author Heriberto Amezcua
 * @version 1.0
 * @since JDK 19
 */
public class JDAñadir extends javax.swing.JDialog {

    private Cancion cancion,
            nuevaCancion;
    private boolean haAñadido;
    private boolean haModificado;
    private boolean selectModificar;

    /**
     * Crea un JDialog con las caractaristicas para crear una nueva cancion.
     *
     * @param parent
     * @param modal
     */
    public JDAñadir(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        inicializar();
        this.haAñadido = false;
        this.selectModificar = false;
    }

    /**
     * Crea un JDialog con las caracteristicas para modificar una cancion.
     *
     * @param parent el Frame padre
     * @param modal especifica si el diálogo bloquea la entrada del usuario a
     * otras ventanas de nivel superior cuando se muestra
     * @param c la cancion que queremos modificar
     */
    public JDAñadir(java.awt.Frame parent, boolean modal, Cancion c) {
        super(parent, modal);
        initComponents();
        inicializar();
        this.haModificado = false;
        this.selectModificar = true;

        this.cancion = new Cancion(c);
        //establezco el estado del dialog en caso de modificar
        labelAñadir.setText(new StringBuilder("Modificando canción: ").append(cancion.getTitulo()).toString());
        textTitulo.setText(cancion.getTitulo());
        textRuta.setText(cancion.getRuta());
        textDuracion.setText(cancion.getDuracion() + "");
        btnAñadir.setText("Modificar");
    }

    /**
     *
     * @return true si se ha conseguido modificar la cancion.
     */
    public boolean getHaModificado() {
        return this.haModificado;
    }

    /**
     *
     * @return true si se ha conseguido crear una nueva cancion.
     */
    public boolean getHaAñadido() {
        return this.haAñadido;
    }

    /**
     *
     * @return una copia de la nueva cancion creada.
     */
    public Cancion getNuevaCancion() {
        return new Cancion(this.nuevaCancion);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelAñadir = new javax.swing.JLabel();
        labelTitulo = new javax.swing.JLabel();
        labelRuta = new javax.swing.JLabel();
        labelDuracion = new javax.swing.JLabel();
        textTitulo = new javax.swing.JTextField();
        textRuta = new javax.swing.JTextField();
        textDuracion = new javax.swing.JTextField();
        btnAñadir = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnChooser = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        labelAñadir.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        labelAñadir.setText("Añadir Nueva Canción");

        labelTitulo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        labelTitulo.setText("Título:");

        labelRuta.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        labelRuta.setText("Ruta:");

        labelDuracion.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        labelDuracion.setText("Duración (en segundos):");

        btnAñadir.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnAñadir.setText("Añadir");
        btnAñadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAñadirActionPerformed(evt);
            }
        });
        btnAñadir.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnAñadirKeyPressed(evt);
            }
        });

        btnCancelar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        btnCancelar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnCancelarKeyPressed(evt);
            }
        });

        btnChooser.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnChooser.setText(". . .");
        btnChooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChooserActionPerformed(evt);
            }
        });
        btnChooser.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnChooserKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelAñadir)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(btnAñadir, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 131, Short.MAX_VALUE)
                            .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(labelDuracion)
                            .addGap(18, 18, 18)
                            .addComponent(textDuracion, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(labelTitulo)
                                .addComponent(labelRuta))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(textTitulo)
                                .addComponent(textRuta, javax.swing.GroupLayout.DEFAULT_SIZE, 317, Short.MAX_VALUE))
                            .addGap(18, 18, 18)
                            .addComponent(btnChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(labelAñadir)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelTitulo)
                    .addComponent(textTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelRuta)
                    .addComponent(textRuta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnChooser))
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelDuracion)
                    .addComponent(textDuracion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAñadir, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        setVisible(false);
    }//GEN-LAST:event_btnCancelarActionPerformed

    /**
     * Permite añadir o modificar una cancion dependiendo de la seleccion del
     * usuario.
     *
     * @param evt click izquierdo en btnAñadir
     */
    private void btnAñadirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAñadirActionPerformed
        String titulo = textTitulo.getText().trim().replaceAll("\\s+{2,}", " "),
                ruta = textRuta.getText().trim(),
                duracion = textDuracion.getText().trim();

        if (selectModificar) {
            if (!validarAtributos(titulo, ruta, duracion)) {
                JOptionPane.showMessageDialog(rootPane, "Error al introducir los datos, no se ha podido modificar", "ERROR", JOptionPane.ERROR_MESSAGE);
                this.setVisible(false);
            } else {
                //si los valores introducidos son validos
                this.cancion.setTitulo(titulo);
                this.cancion.setRuta(ruta);
                if (duracion.isBlank()) {
                    this.cancion.setDuracion(-1);
                } else {
                    this.cancion.setDuracion(Integer.parseInt(duracion));
                }

                this.haModificado = true;
                this.nuevaCancion = this.cancion;
                setVisible(false);
            }

        } else {
            if (!validarAtributos(titulo, ruta, duracion)) {
                JOptionPane.showMessageDialog(rootPane, "Error al introducir los datos, no se ha podido añadir la nueva canción", "ERROR", JOptionPane.ERROR_MESSAGE);
                this.setVisible(false);
            } else {
                //si los valores introducidos son validos
                this.nuevaCancion = (!duracion.isBlank()) ? new Cancion(titulo, ruta, Integer.parseInt(duracion)) : new Cancion(titulo, ruta, -1);
                this.haAñadido = true;
                setVisible(false);
            }
        }
    }//GEN-LAST:event_btnAñadirActionPerformed

    /**
     * Permite comprobar si un string podria ser numerico entero
     *
     * @param s el string a comprobar
     * @return true si todos los caracteres del string a comprobar son digitos.
     */
    public static boolean esNumerico(String s) {
        if (s == null || s.equals("")) {
            return false;
        }

        return s.chars().allMatch(Character::isDigit);
    }

    /**
     * Nos permite validar los atributos introducidos por el usuario para crear
     * o modificar una cancion.
     *
     * @param titulo el titulo de la cancion a validar
     * @param ruta la ruta de la cancion a validar
     * @param duracion la duracion de la cancion a validar
     * @return true si no estan en blanco y si la duracion esta compuesta de
     * caracteres numericos o es -1.
     */
    private boolean validarAtributos(String titulo, String ruta, String duracion) {
        boolean sonValidos = !titulo.isBlank() && !ruta.isBlank();

        if (sonValidos && (!duracion.equals("-1") && !duracion.isBlank())) {
            System.out.println(sonValidos);
            sonValidos = esNumerico(duracion);
        }

        if (sonValidos && !duracion.isBlank()) {
            if (Integer.parseInt(duracion) <= 0 && !duracion.equals("-1")) {
                sonValidos = false;
            }
        }
        return sonValidos;
    }

    /**
     * Permite establecer la ruta de un fichero al textField del JDialog a
     * traves de un JFileChooser.
     *
     * @param evt click izquierdo en btnChooser
     */
    private void btnChooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChooserActionPerformed
        JFileChooser fc = new JFileChooser();

        int seleccion = fc.showOpenDialog(rootPane);

        if (seleccion == JFileChooser.APPROVE_OPTION) {
            File f = fc.getSelectedFile();
            if (f.exists()) {
                textRuta.setText(f.getAbsolutePath());
            }
        }
    }//GEN-LAST:event_btnChooserActionPerformed

    /**
     * Permite hacer click en btnAñadir cuando tiene el foco y pulsamos enter
     *
     * @param evt la tecla que es pulsada
     */
    private void btnAñadirKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnAñadirKeyPressed
        if (btnAñadir.isFocusOwner()) {
            btnAñadir.doClick();
        }
    }//GEN-LAST:event_btnAñadirKeyPressed

    /**
     * Permite hacer click en btnCancelar cuando tiene el foco y pulsamos enter
     *
     * @param evt la tecla que es pulsada
     */
    private void btnCancelarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnCancelarKeyPressed
        if (btnCancelar.isFocusOwner()) {
            btnCancelar.doClick();
        }
    }//GEN-LAST:event_btnCancelarKeyPressed

    /**
     * Permite hacer click en btnChooser cuando tiene el foco y pulsamos enter
     *
     * @param evt la tecla que es pulsada
     */
    private void btnChooserKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnChooserKeyPressed
        if (btnChooser.isFocusOwner()) {
            btnChooser.doClick();
        }
    }//GEN-LAST:event_btnChooserKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JDAñadir.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JDAñadir.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JDAñadir.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JDAñadir.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JDAñadir dialog = new JDAñadir(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAñadir;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnChooser;
    private javax.swing.JLabel labelAñadir;
    private javax.swing.JLabel labelDuracion;
    private javax.swing.JLabel labelRuta;
    private javax.swing.JLabel labelTitulo;
    private javax.swing.JTextField textDuracion;
    private javax.swing.JTextField textRuta;
    private javax.swing.JTextField textTitulo;
    // End of variables declaration//GEN-END:variables

    /**
     * Permite reutilizar los componentes inciales tanto si el usuario elige
     * añadir o modificar.
     */
    public void inicializar() {
        setLocationRelativeTo(null);
        ImageIcon mainIcon = new ImageIcon("iconos/icon-btnPlay.png");
        setIconImage(mainIcon.getImage());
        setTitle("Listas Musicales");
    }
}
